#BlueJ class context
comment0.target=Championship
comment0.text=\r\n\ This\ class\ represents\ the\ entire\ Championship.\ It\ consist\ of\ fields\ with\ collection\ of\ drivers\ and\ venue\ and\ has\ accessor\ and\ mutator\ methods\ for\ them.\r\n\ This\ is\ the\ client\ class\ that\ contains\ the\ method\ to\ play\ the\ game.\r\n\ It\ also\ consists\ of\ other\ private\ methods\ to\ help\ with\ the\ functionality\ internally.\r\n\ @author\ Rohan\ Nischal\r\n\ @version\ 1.3\r\n
comment1.params=
comment1.target=Championship()
comment1.text=\r\n\ Championship\ Constructor\r\n\ Initialize\ the\ field\ variables\ to\ their\ default\ state\r\n
comment10.params=
comment10.target=void\ displayChampionshipDetails()
comment10.text=\r\n\ Method\ displayChampionshipDetails\r\n\ This\ method\ can\ be\ used\ to\ print\ out\ the\ driver's\ championship\ details\ to\ the\ screen\r\n
comment11.params=
comment11.target=void\ displayGameHeader()
comment11.text=\r\n\ Method\ displayGameHeader\r\n\ This\ method\ can\ be\ used\ to\ print\ out\ the\ welcome\ message\ to\ the\ screen\r\n
comment12.params=
comment12.target=void\ displayLine()
comment12.text=\r\n\ Method\ displayLine\r\n\ Display\ a\ line\ with\ Hash\ characters\ on\ the\ screen\r\n
comment13.params=avgLapTime\ lapNo
comment13.target=void\ completeLap(int,\ int)
comment13.text=\r\n\ Method\ completeLap\r\n\ this\ method\ is\ used\ to\ complete\ a\ single\ lap\ in\ the\ race.\ It\ takes\ in\ the\ average\ lap\ time\ and\ generates\ probability\ for\ each\ lap\ event.\r\n\ The\ occuring\ lap\ events\ are\ printed\ out\ to\ the\ screen\ and\ the\ affected\ time\ is\ added\ to\ the\ current\ lap\ time\r\n\ @param\ avgLapTime\ Average\ lap\ time\ at\ this\ venue\r\n\ @param\ lapNo\ the\ current\ lap\ number\r\n
comment14.params=byTime\ allTyreTypes
comment14.target=void\ updateRanking(boolean,\ char[])
comment14.text=\r\n\ Method\ updateRanking\r\n\ sort\ the\ collection\ of\ drivers\ and\ updates\ the\ ranking\ of\ each\ driving\r\n\ @param\ byTime\ flag\ representing\ to\ sort\ by\ accumulated\ time\ or\ not\r\n\ @param\ allTyreTypes\ An\ array\ of\ the\ tyre\ types\ of\ all\ the\ drivers\r\n
comment15.params=allTyreTypes
comment15.target=void\ updateRacePoints(char[])
comment15.text=\r\n\ Method\ updateRacePoints\r\n\ this\ method\ can\ be\ used\ to\ update\ the\ race\ points\ for\ each\ driver\ at\ the\ end\ of\ each\ race\ by\ their\ position\ in\ the\ collection\ after\ sorting\r\n\ @param\ allTyreTypes\ An\ array\ of\ the\ tyre\ types\ of\ all\ the\ drivers\r\n
comment16.params=lapNo\ allTyreTypes
comment16.target=void\ checkForTyreChange(int,\ char[])
comment16.text=\r\n\ Method\ checkForTyreChange\r\n\ this\ method\ can\ be\ used\ in\ case\ of\ rain\ to\ give\ each\ eligible\ driver\ a\ 50%\ chance\ to\ change\ tyre\ type\r\n\ @param\ rainProbability\ A\ probability\ of\ rain\ at\ this\ venue\r\n\ @param\ lapNo\ current\ lap\ number\r\n\ @param\ allTyreTypes\ \ An\ array\ of\ the\ tyre\ types\ of\ all\ the\ drivers\r\n
comment17.params=path
comment17.target=void\ readDriverFile(java.lang.String)
comment17.text=\r\n\ Method\ readDriverFile\r\n\ Read\ details\ from\ the\ file\ containing\ driver\ details\ and\ adds\ it\ to\ the\ collection\ of\ driver\r\n\ @param\ path\ A\ path\ or\ name\ of\ file\ to\ read\ from\r\n
comment18.params=path
comment18.target=void\ readVenueFile(java.lang.String)
comment18.text=\r\n\ Method\ readVenueFile\r\n\ Read\ details\ from\ the\ file\ containing\ venues\ and\ adds\ it\ to\ the\ collection\ of\ venues\r\n\ @param\ path\ A\ path\ or\ name\ of\ file\ to\ read\ from\r\n
comment19.params=path
comment19.target=void\ writeFile(java.lang.String)
comment19.text=\r\n\ Method\ writeFile\r\n\ Writes\ all\ the\ driver's\ details\ to\ the\ file\r\n\ @param\ path\ A\ path\ or\ name\ of\ file\ to\ write\ to\r\n
comment2.params=newDrivers\ newVenues
comment2.target=Championship(ListOfDrivers,\ ListOfVenues)
comment2.text=\r\n\ Championship\ Constructor\r\n\r\n\ @param\ newDrivers\ An\ object\ representing\ all\ the\ new\ drivers\ in\ the\ championship\r\n\ @param\ newVenues\ An\ object\ representing\ all\ the\ new\ venues\ in\ the\ championship\r\n
comment20.params=
comment20.target=void\ showChampionshipWinner()
comment20.text=\r\n\ Method\ showChampionshipWinner\r\n\ this\ method\ can\ be\ used\ to\ display\ the\ championship\ winner\ and\ print\ it\ out\ to\ the\ screen.\r\n
comment21.params=lapNo\ rainProbability\ allTyreTypes
comment21.target=boolean\ checkForRain(int,\ int,\ char[])
comment21.text=\r\n\ Method\ checkForRain\r\n\ This\ method\ can\ be\ used\ to\ checkForRain\ at\ a\ particular\ by\ passing\ in\ the\ venue's\ probability\ of\ rain.\r\n\ All\ the\ drivers\ with\ dry\ weather\ tyres\ would\ be\ added\ a\ time\ of\ 5\ seconds\ in\ case\ of\ rain\r\n\ @param\ lapNo\ the\ current\ lap\ number\r\n\ @param\ rainProbability\ A\ probability\ of\ rain\ at\ this\ venue\r\n\ @param\ allTyreTypes\ An\ array\ of\ the\ tyre\ types\ of\ all\ the\ drivers\r\n\ @return\ true\ if\ raining\ or\ false\ if\ not\r\n
comment3.params=
comment3.target=ListOfDrivers\ getDrivers()
comment3.text=\r\n\ Method\ getDrivers\r\n\r\n\ @return\ An\ object\ representing\ all\ the\ new\ drivers\ in\ the\ championship\r\n
comment4.params=
comment4.target=ListOfVenues\ getVenues()
comment4.text=\r\n\ Method\ getVenues\r\n\r\n\ @return\ An\ object\ representing\ all\ the\ new\ venues\ in\ the\ championship\r\n
comment5.params=newDrivers
comment5.target=void\ setDrivers(ListOfDrivers)
comment5.text=\r\n\ Method\ setDrivers\r\n\r\n\ @param\ newDrivers\ An\ object\ representing\ all\ the\ new\ drivers\ in\ the\ championship\r\n
comment6.params=newVenues
comment6.target=void\ setVenues(ListOfVenues)
comment6.text=\r\n\ Method\ setVenues\r\n\r\n\ @param\ newVenues\ An\ object\ representing\ all\ the\ new\ venues\ in\ the\ championship\r\n
comment7.params=
comment7.target=void\ startGame()
comment7.text=\r\n\ Method\ startGame\r\n\ this\ method\ can\ be\ used\ to\ start\ the\ championship.\ It\ reads\ data\ from\ the\ files\ and\ initializes\ both\ the\ collections\r\n\ It\ contains\ the\ logic\ for\ each\ race\ and\ working\ for\ each\ lap\ (including\ probability\ for\ rain\ and\ tyre\ type\ change).\ \r\n\ The\ drivers\ details\ are\ written\ back\ to\ the\ file\ after\ the\ championship\ and\ the\ winner\ is\ displayed\r\n
comment8.params=
comment8.target=void\ applyRaceStartPenalty()
comment8.text=\r\n\ Method\ applyRaceStartPenalty\r\n\ This\ method\ can\ be\ used\ to\ apply\ the\ initial\ time\ penalties\ for\ each\ of\ the\ drivers\ in\ the\ championship\ by\ their\ starting\ positions\r\n
comment9.params=lapNo\ isStart\ isFinish
comment9.target=void\ displayDriverDetails(int,\ boolean,\ boolean)
comment9.text=\r\n\ Method\ displayDriverDetails\r\n\r\n\ @param\ lapNo\ the\ current\ lap\ number\r\n\ @param\ isStart\ flag\ representing\ is\ this\ the\ start\ of\ the\ race\ or\ not\r\n\ @param\ isFinish\ flag\ representing\ is\ this\ the\ finish\ of\ the\ race\ or\ not\r\n
numComments=22
